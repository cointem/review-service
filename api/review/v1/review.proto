syntax = "proto3";

package api.review.v1;

option go_package = "review-service/api/review/v1;v1";
option java_multiple_files = true;
option java_package = "api.review.v1";

import "google/api/annotations.proto";
import "validate/validate.proto";

service Review {
	//B端创建评价
	rpc CreateReview (CreateReviewRequest) returns (CreateReviewReply){
		option (google.api.http) = {
			post: "/v1/review"
			body: "*"
		};
	};

	//B端获取评价
	rpc GetReview (GetReviewRequest) returns (GetReviewReply){
		option (google.api.http) = {
			get: "/v1/review/{reviewID}"
		};
	};

	//B端回复评价
	rpc ReplyReview (ReplyReviewRequest) returns (ReplyReviewReply){
		option (google.api.http) = {
			post: "/v1/review/reply"
			body: "*"
		};
	};

	//B端申诉评价
	rpc AppealReview (AppealReviewRequest) returns (AppealReviewReply){
		option (google.api.http) = {
			post: "/v1/review/appeal"
			body: "*"
		};
	};


	//O端审核评价
	rpc AuditReview (AuditReviewRequest) returns (AuditReviewReply){
		option (google.api.http) = {
			post: "/v1/review/audit"
			body: "*"
		};
	};

	//O端评价申诉审核
	rpc AuditAppeal (AuditAppealRequest) returns (AuditAppealReply){
		option (google.api.http) = {
			post: "/v1/appeal/audit"
			body: "*"
		};
	};

	//C端查看用户id所有评价
	rpc ListReviewByUserID (ListReviewByUserIDRequest) returns (ListReviewByUserIDReply){
		option (google.api.http) = {
			get: "/v1/{userID}/reviews"
		};
	};
}

message CreateReviewRequest {
	int64 userID = 1  [(validate.rules).int64 = {gt: 0}] ;
	int64 orderID = 2 [(validate.rules).int64 = {gt: 0}] ;
	int32 score = 3 [(validate.rules).int32 = {gt: 0, lt: 6}] ;
	int32 serviceScore = 4 [(validate.rules).int32 = {gt: 0, lt: 6}] ;
	int32 expressScore = 5 [(validate.rules).int32 = {gt: 0, lt: 6}] ;
	string content = 6 [(validate.rules).string = {min_len: 8, max_len: 1000}] ;
	string picInfo = 7;
	string videoInfo = 8;
	bool anonymous = 9;
}
message CreateReviewReply {
	int64 reviewID = 1;
}



message GetReviewRequest {
	int64 reviewID = 1  ;
}
message GetReviewReply {
	ReviewInfo review = 1;
}

message ReplyReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}] ;
	string content = 2 [(validate.rules).string = {min_len: 8, max_len: 1000}] ;
	int64 storeID = 3 [(validate.rules).int64 = {gt: 0}] ;
	string picInfo = 4;
	string videoInfo = 5;
}

message ReplyReviewReply {
	int64 reviewID = 1;
}

message AppealReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}] ;
	string content = 2 [(validate.rules).string = {min_len: 8, max_len: 1000}] ;
	string picInfo = 3;
	string videoInfo = 4;
	string reason = 5 [(validate.rules).string = {min_len: 8, max_len: 1000}] ; 
	int64 storeID = 6 [(validate.rules).int64 = {gt: 0}] ;
}

message AppealReviewReply {
	int64 appealID = 1;
}

message AuditReviewRequest {
	int64 reviewID = 1 [(validate.rules).int64 = {gt: 0}] ;
	int32 status = 2 [(validate.rules).int32 = {gt: 0}] ;
	string opReason = 3 [(validate.rules).string = {min_len: 8, max_len: 1000}] ;
	string opUser = 4 [(validate.rules).string = {min_len: 8, max_len: 1000}] ;
	optional string opRemarks = 5;
}

message AuditReviewReply {
	int64 reviewID = 1;
	int32 status = 2;
}

message AuditAppealRequest {
	int64 appealID = 1 [(validate.rules).int64 = {gt: 0}] ;
	int32 status = 2 [(validate.rules).int32 = {gt: 0}] ;
	string opUser = 3 [(validate.rules).string = {min_len: 8, max_len: 1000}] ;
	optional string opRemarks = 4;
}

message AuditAppealReply {
	int64 appealID = 1;
}

message ListReviewByUserIDRequest {
	int64 userID = 1 [(validate.rules).int64 = {gt: 0}] ;
}

message ListReviewByUserIDReply {
	repeated ReviewInfo reviews = 1;
}
message ReviewInfo{
	int64 reviewID = 1;
	int64 userID = 2;
	int64 orderID = 3;
	int32 score = 4;
	int32 serviceScore = 5;
	int32 expressScore = 6;
	string content = 7;
	string picInfo = 8;
	string videoInfo = 9;
	int32 status = 10;
}